{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/product/produto-add/produto-add.component.ts","webpack:///src/app/components/product/produto-add/produto-add.component.html","webpack:///src/app/components/product/produto-lista-table/produto-lista-table-datasource.ts","webpack:///src/app/components/product/produto-lista-table/produto-lista-table.component.ts","webpack:///src/app/components/product/produto-lista-table/produto-lista-table.component.html","webpack:///src/app/components/product/produto.model.ts","webpack:///src/app/components/product/produto.service.ts","webpack:///src/app/components/produto-lista/produto-lista.component.ts","webpack:///src/app/components/produto-lista/produto-lista.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/directives/for.directive.ts","webpack:///src/app/directives/red.directive.ts","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/produto/produto.component.ts","webpack:///src/app/views/produto/produto.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","AppModule","declarations","providers","bootstrap","ProdutoAddComponent","produtoService","router","produto","adicionar","subscribe","exibirMensagem","navigate","criarProduto","cancelar","styleUrls","EXAMPLE_DATA","name","ProdutoListaTableDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProdutoListaTableComponent","displayedColumns","dataSource","table","Produto","ProdutoService","snackBar","http","baseUrl","mensagem","open","duration","horizontalPosition","verticalPosition","console","log","post","get","providedIn","ProdutoListaComponent","consultar","produtos","FooterComponent","HeaderComponent","NavComponent","ForDirective","container","template","numbers","number","createEmbeddedView","$implicit","RedDirective","element","nativeElement","style","color","HomeComponent","ProdutoComponent","navegarParaProdutoAdd","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProdutoAddComponent } from './components/product/produto-add/produto-add.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProdutoComponent } from './views/produto/produto.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'produtos', component: ProdutoComponent },\n  { path: 'produtos/adicionar', component: ProdutoAddComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatListModule } from '@angular/material/list'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\n\n\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProdutoComponent } from './views/produto/produto.component';\nimport { RedDirective } from './directives/red.directive';\nimport { ForDirective } from './directives/for.directive';\nimport { ProdutoAddComponent } from './components/product/produto-add/produto-add.component';\nimport { ProdutoListaComponent } from './components/produto-lista/produto-lista.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProdutoListaTableComponent } from './components/product/produto-lista-table/produto-lista-table.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProdutoComponent,\n    RedDirective,\n    ForDirective,\n    ProdutoAddComponent,\n    ProdutoListaComponent,\n    ProdutoListaTableComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Router } from '@angular/router';\nimport { ProdutoService } from './../produto.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Produto } from '../produto.model';\n\n@Component({\n  selector: 'app-produto-add',\n  templateUrl: './produto-add.component.html',\n  styleUrls: ['./produto-add.component.css']\n})\nexport class ProdutoAddComponent implements OnInit {\n\n  public produto: Produto = new Produto()\n\n  constructor(\n    private produtoService: ProdutoService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public criarProduto(): void {\n   \n    this.produtoService.adicionar(this.produto).subscribe(() => {\n      this.produtoService.exibirMensagem('Produto criado com sucesso')\n      this.router.navigate(['/produtos'])\n    })\n  }\n\n  public cancelar(): void {\n    this.router.navigate(['/produtos'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo produto</mat-card-title>\n    <form >\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"produto.nome\" name=\"nome\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço\" \n                [(ngModel)]=\"produto.preco\" name=\"preco\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"criarProduto()\" color=\"primary\">\n        Salvar\n    </button>\n    <button mat-raised-button (click)=\"cancelar()\">\n        Cancelar\n    </button>\n   \n</mat-card>\n\n\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProdutoListaTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProdutoListaTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProdutoListaTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProdutoListaTableDataSource extends DataSource<ProdutoListaTableItem> {\n  data: ProdutoListaTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProdutoListaTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProdutoListaTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProdutoListaTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProdutoListaTableDataSource, ProdutoListaTableItem } from './produto-lista-table-datasource';\n\n@Component({\n  selector: 'app-produto-lista-table',\n  templateUrl: './produto-lista-table.component.html',\n  styleUrls: ['./produto-lista-table.component.css']\n})\nexport class ProdutoListaTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProdutoListaTableItem>;\n  dataSource: ProdutoListaTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProdutoListaTableDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"50\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\n  </mat-paginator>\n</div>\n","export class Produto {\r\n\r\n    public id: number\r\n    public nome: string\r\n    public preco: number\r\n    \r\n}","import { Produto } from './produto.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  private baseUrl = \"http://localhost:3001/produtos\"\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  public exibirMensagem(mensagem: string): void {\n    this.snackBar.open(mensagem, 'X', {\n      duration: 3000,\n      horizontalPosition: 'right',\n      verticalPosition: 'top'\n    })\n  }\n\n  public adicionar(produto: Produto): Observable<Produto> {\n    console.log('Produto inserido: ', produto)\n    return this.http.post<Produto>(this.baseUrl, produto)\n  }\n\n  public consultar(): Observable<Produto[]> {\n    return this.http.get<Produto[]>(this.baseUrl)\n  }\n}\n","import { ProdutoService } from './../product/produto.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Produto } from '../product/produto.model';\n\n@Component({\n  selector: 'app-produto-lista',\n  templateUrl: './produto-lista.component.html',\n  styleUrls: ['./produto-lista.component.css']\n})\nexport class ProdutoListaComponent implements OnInit {\n\n  public produtos: Produto[]\n\n  constructor(\n    private produtoService: ProdutoService\n  ) { }\n\n  ngOnInit(): void {\n    this.produtoService.consultar().subscribe((produtos: Produto[]) => {\n      this.produtos = produtos\n    })\n  }\n\n}\n","<ul>\n    <li *ngFor=\"let produto of produtos\">\n        {{produto.nome}}\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido por <strong appRed>Erik Brunno</strong>\n    </span>\n    <!-- <ul>\n        <li *myFor=\"let n em [1, 2, 3]\">{{n}}</li>\n    </ul> -->\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a>\n            <img class=\"logo\" src=\"assets/img/logo-code3.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a>\n            <i class=\"material-icons\">\n                home\n            </i>\n            Aplicação produtos\n        </a>\n    </span>\n</mat-toolbar>\n    \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened \n        fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Inicio\n            </a>\n            <a mat-list-item routerLink=\"/produtos\">\n                <i class=\"material-icons\">\n                    storefront\n                </i>\n                Produtos\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Directive, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[myFor]'\n})\nexport class ForDirective implements OnInit {\n\n  @Input('myForEm') numbers: number[]\n\n  constructor(\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>  \n  ) { }\n\n  ngOnInit(): void {\n    for (let number of this.numbers) {\n      this.container.createEmbeddedView(\n        this.template, { $implicit: number })\n    }\n  }\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private element: ElementRef) {\n    element.nativeElement.style.color = '#e35e6b'\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">Bem vindo</mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n        Sistema para cadastro de produtos\n    </mat-card-subtitle>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html',\n  styleUrls: ['./produto.component.css']\n})\nexport class ProdutoComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public navegarParaProdutoAdd(): void {\n    this.router.navigate(['/produtos/adicionar'])\n  }\n\n}\n","<button mat-raised-button \n    (click)=\"navegarParaProdutoAdd()\"\n    color=\"primary\">\n    Novo produto\n</button>\n<app-produto-lista></app-produto-lista>\n<app-produto-lista-table></app-produto-lista-table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}