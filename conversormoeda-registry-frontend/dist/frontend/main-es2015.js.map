{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/product/produto-add/produto-add.component.ts","./src/app/components/product/produto-add/produto-add.component.html","./src/app/components/product/produto-lista-table/produto-lista-table-datasource.ts","./src/app/components/product/produto-lista-table/produto-lista-table.component.ts","./src/app/components/product/produto-lista-table/produto-lista-table.component.html","./src/app/components/product/produto.model.ts","./src/app/components/product/produto.service.ts","./src/app/components/produto-lista/produto-lista.component.ts","./src/app/components/produto-lista/produto-lista.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/directives/for.directive.ts","./src/app/directives/red.directive.ts","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/produto/produto.component.ts","./src/app/views/produto/produto.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProdutoAddComponent } from './components/product/produto-add/produto-add.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProdutoComponent } from './views/produto/produto.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'produtos', component: ProdutoComponent },\n  { path: 'produtos/adicionar', component: ProdutoAddComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatListModule } from '@angular/material/list'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\n\n\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProdutoComponent } from './views/produto/produto.component';\nimport { RedDirective } from './directives/red.directive';\nimport { ForDirective } from './directives/for.directive';\nimport { ProdutoAddComponent } from './components/product/produto-add/produto-add.component';\nimport { ProdutoListaComponent } from './components/produto-lista/produto-lista.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProdutoListaTableComponent } from './components/product/produto-lista-table/produto-lista-table.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProdutoComponent,\n    RedDirective,\n    ForDirective,\n    ProdutoAddComponent,\n    ProdutoListaComponent,\n    ProdutoListaTableComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Router } from '@angular/router';\nimport { ProdutoService } from './../produto.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Produto } from '../produto.model';\n\n@Component({\n  selector: 'app-produto-add',\n  templateUrl: './produto-add.component.html',\n  styleUrls: ['./produto-add.component.css']\n})\nexport class ProdutoAddComponent implements OnInit {\n\n  public produto: Produto = new Produto()\n\n  constructor(\n    private produtoService: ProdutoService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public criarProduto(): void {\n   \n    this.produtoService.adicionar(this.produto).subscribe(() => {\n      this.produtoService.exibirMensagem('Produto criado com sucesso')\n      this.router.navigate(['/produtos'])\n    })\n  }\n\n  public cancelar(): void {\n    this.router.navigate(['/produtos'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo produto</mat-card-title>\n    <form >\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"produto.nome\" name=\"nome\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço\" \n                [(ngModel)]=\"produto.preco\" name=\"preco\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"criarProduto()\" color=\"primary\">\n        Salvar\n    </button>\n    <button mat-raised-button (click)=\"cancelar()\">\n        Cancelar\n    </button>\n   \n</mat-card>\n\n\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProdutoListaTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProdutoListaTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProdutoListaTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProdutoListaTableDataSource extends DataSource<ProdutoListaTableItem> {\n  data: ProdutoListaTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProdutoListaTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProdutoListaTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProdutoListaTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProdutoListaTableDataSource, ProdutoListaTableItem } from './produto-lista-table-datasource';\n\n@Component({\n  selector: 'app-produto-lista-table',\n  templateUrl: './produto-lista-table.component.html',\n  styleUrls: ['./produto-lista-table.component.css']\n})\nexport class ProdutoListaTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProdutoListaTableItem>;\n  dataSource: ProdutoListaTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProdutoListaTableDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"50\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\n  </mat-paginator>\n</div>\n","export class Produto {\r\n\r\n    public id: number\r\n    public nome: string\r\n    public preco: number\r\n    \r\n}","import { Produto } from './produto.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  private baseUrl = \"http://localhost:3001/produtos\"\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  public exibirMensagem(mensagem: string): void {\n    this.snackBar.open(mensagem, 'X', {\n      duration: 3000,\n      horizontalPosition: 'right',\n      verticalPosition: 'top'\n    })\n  }\n\n  public adicionar(produto: Produto): Observable<Produto> {\n    console.log('Produto inserido: ', produto)\n    return this.http.post<Produto>(this.baseUrl, produto)\n  }\n\n  public consultar(): Observable<Produto[]> {\n    return this.http.get<Produto[]>(this.baseUrl)\n  }\n}\n","import { ProdutoService } from './../product/produto.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Produto } from '../product/produto.model';\n\n@Component({\n  selector: 'app-produto-lista',\n  templateUrl: './produto-lista.component.html',\n  styleUrls: ['./produto-lista.component.css']\n})\nexport class ProdutoListaComponent implements OnInit {\n\n  public produtos: Produto[]\n\n  constructor(\n    private produtoService: ProdutoService\n  ) { }\n\n  ngOnInit(): void {\n    this.produtoService.consultar().subscribe((produtos: Produto[]) => {\n      this.produtos = produtos\n    })\n  }\n\n}\n","<ul>\n    <li *ngFor=\"let produto of produtos\">\n        {{produto.nome}}\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido por <strong appRed>Erik Brunno</strong>\n    </span>\n    <!-- <ul>\n        <li *myFor=\"let n em [1, 2, 3]\">{{n}}</li>\n    </ul> -->\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a>\n            <img class=\"logo\" src=\"assets/img/logo-code3.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a>\n            <i class=\"material-icons\">\n                home\n            </i>\n            Aplicação produtos\n        </a>\n    </span>\n</mat-toolbar>\n    \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened \n        fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Inicio\n            </a>\n            <a mat-list-item routerLink=\"/produtos\">\n                <i class=\"material-icons\">\n                    storefront\n                </i>\n                Produtos\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Directive, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[myFor]'\n})\nexport class ForDirective implements OnInit {\n\n  @Input('myForEm') numbers: number[]\n\n  constructor(\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>  \n  ) { }\n\n  ngOnInit(): void {\n    for (let number of this.numbers) {\n      this.container.createEmbeddedView(\n        this.template, { $implicit: number })\n    }\n  }\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private element: ElementRef) {\n    element.nativeElement.style.color = '#e35e6b'\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">Bem vindo</mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n        Sistema para cadastro de produtos\n    </mat-card-subtitle>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html',\n  styleUrls: ['./produto.component.css']\n})\nexport class ProdutoComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public navegarParaProdutoAdd(): void {\n    this.router.navigate(['/produtos/adicionar'])\n  }\n\n}\n","<button mat-raised-button \n    (click)=\"navegarParaProdutoAdd()\"\n    color=\"primary\">\n    Novo produto\n</button>\n<app-produto-lista></app-produto-lista>\n<app-produto-lista-table></app-produto-lista-table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}